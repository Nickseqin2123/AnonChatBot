import json

from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from keyboards.inlines import inline


router = Router(name=__name__)


class ReplyMessageState(StatesGroup):
    message = State()
    
    
@router.callback_query(F.func(lambda x: json.loads(x.data).get('type') == 'reply'))
async def teply_toanon(callback: CallbackQuery, state: FSMContext):
    data = json.loads(callback.data)
    
    await callback.message.answer(
        text='''
üåà –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º –º–Ω–µ–Ω–∏–µ–º –∞–Ω–æ–Ω–∏–º–Ω–æ —Å —á–µ–ª–æ–≤–µ–∫–æ–º, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–ª —ç—Ç—É —Å—Å—ã–ª–∫—É.

üñã –ù–∞–ø–∏—à–∏ –≤—Å—ë, —á—Ç–æ —Ö–æ—á–µ—à—å –ø–µ—Ä–µ–¥–∞—Ç—å, –∏ —É–∂–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç —É –Ω–µ–≥–æ. –û–Ω –Ω–µ —É–∑–Ω–∞–µ—Ç, –∫—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏–ª!

–ú–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, üí¨ —Ç–µ–∫—Å—Ç, üîä –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, üì∑ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–∞–∂–µ ‚ú® —Å—Ç–∏–∫–µ—Ä—ã. –ñ–¥–µ–º —Ç–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!
''')
    await state.set_state(ReplyMessageState.message)
    await state.update_data(id_person=data['id'], reply_id=data['reply_id'])


@router.message(ReplyMessageState.message)
async def get_msg(message: Message, state: FSMContext):
    data = await state.get_data()
    await state.clear()

    person_id = data['id_person']
    
    if message.text:
        msg = f'–¢–µ–±–µ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n{message.text}'
        await message.bot.send_message(chat_id=person_id, text=msg, reply_markup=await inline(
            –û—Ç–≤–µ—Ç–∏—Ç—å={'id': message.from_user.id, 'type': 'reply', 'reply_id': message.message_id}
            ), reply_to_message_id=data['reply_id'])
    else:
        cap = '–ö —Ç–µ–±–µ –ø—Ä–∏—à–ª–æ –Ω–æ–≤–æ–µ –∞–Ω–æ–Ω–∏–º–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'
        await message.bot.copy_message(chat_id=person_id, from_chat_id=message.chat.id, message_id=message.message_id, caption=cap, reply_markup=await inline(
            –û—Ç–≤–µ—Ç–∏—Ç—å={'id': message.from_user.id, 'type': 'reply', 'reply_id': message.message_id}
            ), reply_to_message_id=data['reply_id'])
    
    await message.answer(
            text='–¢–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!'
        )